https://en.wikipedia.org/wiki/Groovy_(programming_language)

Curry[edit]

Usually called partial application,[24] 
this Groovy feature allows closures' parameters 
to be set to a default parameter in any of their arguments, 
creating a new closure with the bound value. 

If you supply one argument to the curry() method you will fix the first argument. 
If you supply N arguments you will fix arguments 1..N.

···
def joinTwoWordsWithSymbol = { symbol, first, second -> first + symbol + second }
assert joinTwoWordsWithSymbol('#', 'Hello', 'World') == 'Hello#World'

def concatWords = joinTwoWordsWithSymbol.curry(' ')
assert concatWords('Hello', 'World') == 'Hello World'

def prependHello = concatWords.curry('Hello')
// def prependHello = joinTwoWordsWithSymbol.curry(' ', 'Hello')
assert prependHello('World') == 'Hello World'
···

Curry can also be used in the reversed direction (fixing arguments N to N-1) using rcurry.

···
def power = { BigDecimal value, BigDecimal power ->
  value ** power
}

def square = power.rcurry(2)
def cube = power.rcurry(3)

assert power(2, 2) == 4
assert square(4) == 16
assert cube(3) == 27
···

Groovy also supports 

lazy evaluation,[25][26] 
reduce/fold,[27] 
infinite structures and immutability,[28] among others.