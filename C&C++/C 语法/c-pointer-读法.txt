11:25 2015/5/7

Why can't I pass a char ** to a function which expects a const char **?
You can use a pointer-to-T (for any type T) where a pointer-to-const-T is expected.

cp is a const pointer to char 
char * const cp; ( * 读成 pointer to ) 
cp is a const pointer to char 

把一个声明从右向左读。 char * const cp; ( * 读成pointer to ) cp is a const pointer to char const char * p


char * const cp; ( * 读成 pointer to ) 
cp is a const pointer to char ：cp是一个指向字符型的常量指针，指针不能改变；

const char ** is pointer-to-pointer-to-const-char,
下面的 const uint8_t **in 读作： in is a pointer to a pointer to const uint8_t
int swr_convert(struct SwrContext *s, uint8_t **out, int out_count,
                                const uint8_t **in , int in_count);