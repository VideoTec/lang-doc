Name mangling或者Decorated Name是指程序设计语言中具有存储性质的对象的名字被编译器改写，以适合编译器、链接器(linker)、汇编器(assembler)使用

所谓的具有存储性质的对象，即lvalue对象，是指要实际占用内存空间、有内存地址的那些实体对象，
例如：变量(variables)、函数、函数指针等

C++中的纯虚函数作为特例也属于这一范畴。
而数据类型(data type)就不属于具有存储性质的对象

问题：全局一维数组，的Name mangling结果，好像和C编译器输出的符号相同 ？？？至少前面应该加了个 P啊，怎么会一样呢？
问题简化： 下面的情况，链接也不报错
file1.c
    extern const char *ptr_str[];
    printf("%d", ptr_str[0]);
file2.cpp
const char *ptr_str[] = {"hello"};

<一维数组类型的编码> ::= <指针类型的编码>
<指针类型的编码> ::= <type modifier> <CV Modifier> <base type>
全局数组类型被编码为P(指针型)，同时作为函数形参的数组类型被编码为Q(常量指针). 这与其本来含义恰恰相反——全局数组型的变量名字表示某块内存地址，该名字不能再改为指向其它内存地址；而作为函数形参的数组型变量的名字所表示的内存地址是可以修改的。但数组类型这种编码方法已经被各种C++编译器广泛接受。显然，这是为了与老的代码保持向后兼容

