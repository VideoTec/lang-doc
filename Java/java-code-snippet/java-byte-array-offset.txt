byte stream[] = {0x41,0x42,0x43,0x44,0x45,0x46,0x47};

void PrintChars(byte[] stream, int howmany) {
   for(int i = 0; i < howmany; ++i)
       System.out.printf("%c ", stream[i] > 32 ? stream[i] : '.');
}

PrintChars(stream+2, 3);

I'd suggest just passing the offset to the function as a separate argument. You can't do pointer arithmetic on a Java array, so you can't change it's size or starting point without copying to a completely new array.

I guessed that you would need to add an offset parameter. I just wondered if there was any way to specify an offset of an array like arr+2 or arr[2]. 

But the Java 'array' is not really a section of memory like say an array in C, it is a class (I suppose). So the start of the Java array is the start memory location of the object, not the direct location in memory of the first element.