http://www.cnblogs.com/skywang12345/p/3308900.html
Java 集合系列08之 List总结(LinkedList, ArrayList等使用场景和性能分析)

ArrayList, LinkedList, Vector, Stack是List的4个实现类。
　　ArrayList 是一个数组队列，相当于动态数组。
它由数组实现，随机访问效率高，随机插入、随机删除效率低。

　　 LinkedList 是一个双向链表。
它也可以被当作堆栈、队列或双端队列进行操作。
LinkedList随机访问效率低，但随机插入、随机删除效率高。

　　Vector 是矢量队列，和ArrayList一样，
它也是一个动态数组，由数组实现。
但是ArrayList是非线程安全的，而Vector是线程安全的。

　　Stack 是栈，它继承于Vector。
它的特性是：先进后出(FILO, First In Last Out)。

如果涉及到“栈”、“队列”、“链表”等操作，应该考虑用List，具体的选择哪个List，根据下面的标准来取舍。
(01) 对于需要快速插入，删除元素，应该使用LinkedList。
(02) 对于需要快速随机访问元素，应该使用ArrayList。
(03) 对于“单线程环境” 或者 “多线程环境，但List仅仅只会被单个线程操作”，此时应该使用非同步的类(如ArrayList)。
     对于“多线程环境，且List可能同时被多个线程操作”，此时，应该使用同步的类(如Vector)。

考虑到Vector是支持同步的，而Stack又是继承于Vector的；因此，得出结论：
(01) 对于需要快速插入，删除元素，应该使用LinkedList。
(02) 对于需要快速随机访问元素，应该使用ArrayList。
(03) 对于“单线程环境” 或者 “多线程环境，但List仅仅只会被单个线程操作”，此时应该使用非同步的类。