---------------------------------------------------------------------------
http://docs.oracle.com/javase/7/docs/api/java/util/EnumMap.html
---------------------------------------------------------------------------

public class EnumMap<K extends Enum<K>,V>

extends AbstractMap<K,V>
implements Serializable, Cloneable

A specialized Map implementation for use with enum type keys. 
All of the keys in an enum map must come from a single enum type that is specified, 
explicitly or implicitly, 
when the map is created. Enum maps are represented internally as arrays. 

This representation is extremely compact and efficient.
Enum maps are maintained in the natural order of their keys 
(the order in which the enum constants are declared). 

This is reflected in the iterators returned by the collections views (keySet(), entrySet(), and values()).

Iterators returned by the collection views are weakly consistent: they will never throw ConcurrentModificationException and they may or may not show the effects of any modifications to the map that occur while the iteration is in progress.

Null keys are not permitted. Attempts to insert a null key will throw NullPointerException. Attempts to test for the presence of a null key or to remove one will, however, function properly. Null values are permitted.

Like most collection implementations EnumMap is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be "wrapped" using the Collections.synchronizedMap(java.util.Map<K, V>) method. This is best done at creation time, to prevent accidental unsynchronized access:

     Map<EnumKey, V> m
         = Collections.synchronizedMap(new EnumMap<EnumKey, V>(...));
 
Implementation note: All basic operations execute in constant time. They are likely (though not guaranteed) to be faster than their HashMap counterparts.

---------------------------------------------------------------------------
http://developer.android.com/reference/java/util/EnumMap.html
---------------------------------------------------------------------------
An Map specialized for use with Enum types as keys.