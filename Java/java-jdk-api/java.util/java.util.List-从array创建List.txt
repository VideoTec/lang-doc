http://stackoverflow.com/questions/12853595/how-to-add-elements-of-a-string-array-to-a-string-array-list

You already have built-in method for that: -

List<String> species = Arrays.asList(speciesArr);
注意：
这种方式创建的对象，不能修改，否则会异常：
mTag = RF_CrashHandler, thread = Thread[main,5,main]
    ava.lang.UnsupportedOperationException
       at java.util.AbstractList.remove(AbstractList.java:638)
       at java.util.AbstractList$SimpleListIterator.remove(AbstractList.java:75)
       at java.util.AbstractList.removeRange(AbstractList.java:658)
       at java.util.AbstractList.clear(AbstractList.java:466)
       at com.feinno.rongfly.core.modules.vowifi.RFVoWifiHttpHelper.invite(RFVoWifiHttpHelper.java:201)


Arrays.asList returns a different ArrayList -> java.util.Arrays.ArrayList 
which cannot be typecasted to java.util.ArrayList.

Then you would have to use addAll method, which is not so good. 
So just use List<String>

http://stackoverflow.com/questions/157944/create-arraylist-from-array
new ArrayList<Element>(Arrays.asList(array))

http://stackoverflow.com/questions/4042434/converting-arrayliststring-to-string-in-java

List<String> list = ..;
String[] array = list.toArray(new String[0]);

For example:

List<String> list = new ArrayList<String>();
//add some stuff
list.add("android");
list.add("apple");
String[] stringArray = list.toArray(new String[0]);  指明了数组类型

The toArray() method without passing any argument returns Object[]. 
So you have to pass an array as an argument, 
which will be filled with the data from the list, and returned. 
You can pass an empty array as well, 
but you can also pass an array with the desired size.

Important update: 
Originally the code above used new String[list.size()]. 
However, this blogpost reveals that due to JVM optimizations, using new String[0] is better now.