https://zh.wikipedia.org/wiki/EJB

EJB容器可以接受三类EJB

会话Bean（Session Beans）
    无状态会话Bean（Stateless Session Beans）
    有状态会话Bean（Stateful Session Beans）
实体Bean（Entity Beans）
消息驱动Bean（Message Driven Beans ，MDBs）

无状态会话Bean
是一类不包含状态信息的分布式对象，
允许来自数个客户端的并发访问。
实例变量的内容在前后数次呼出中不被保留（确切地说是不保证保留）。
由于不必控制与用户间的对话信息而减少了开销，
无状态会话Bean不像有状态会话Bean那样具有资源集约性。
举例来说，
一个发送邮件的EJB就可被设计为一个无状态会话Bean。
在整个会话期，用户只向服务器提交一个动作：
发送指定邮件到指定地址。（称为开关行为）

有状态会话Bean
是包含状态的分布式对象，即是说，
贯穿整个会话它们都要保有客户端信息。
举例而言，
在一个网上商店进行实施结账很可能就需要一个有状态会话Bean，
因为结账是一个多步动作，
服务器端必须可以随时了解到用户已经进行到了哪一步。
此外，尽管有状态会话Bean的状态信息可被保持，
但始终只能同是由一个用户来访问之。

实体Bean
是含有持久化状态的分布式对象。
这个持久化状态的管理既可以交给Bean自身（Bean-Managed Persistence，BMP），
也可以托付于外部机制（Container-Managed Persistence，CMP）。

消息驱动Bean - MDB
是支持异步行为的分布式对象。
它们并不对请求进行当即响应。
比方说，
某网站用户点击“请通知我更新信息”按钮，
将会触发某个MDB将这名用户加入到数据库的希望获得更新信息用户列表中。
这个动作就是一个异步的消息驱动过程，
因为用户不必等待当时会返回某个结果。
MDB的消息源来自Java消息服务（JMS）提供的消息队列或消息主题。
自EJB 2.0规范起，JMS被加入进来以允许在容器内部实施事件驱动处理。
与其他EJB不同，MDB不存在一个用户视图（如需要用户引用的远程接口），
用户也不能通过资源定位获得一个MDB实例。
MDB只在后台监听消息源并实施自动处理。

除了上述以外，
目前还有一些EJB处于设想阶段，
如JSR 86提出了用于在Java EE应用中集成
多媒体对象的媒体Bean（Enterprise Media Beans）。