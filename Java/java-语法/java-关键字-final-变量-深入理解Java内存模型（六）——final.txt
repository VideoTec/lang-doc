http://www.infoq.com/cn/articles/java-memory-model-6

与前面介绍的锁和volatile相比较，
对final域的读和写更像是普通的变量访问。
对于final域，编译器和处理器要遵守两个重排序规则：

在构造函数内对一个final域的写入，
与随后把这个被构造对象的引用赋值给一个引用变量，
这两个操作之间不能重排序。

初次读一个包含final域的对象的引用，
与随后初次读这个final域，这两个操作之间不能重排序。