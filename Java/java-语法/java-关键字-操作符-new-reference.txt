基本类型(primitive type)的对象，比如int, double，保存在栈上。当我们声明基本类型时，不需要new。
一旦声明，Java将在栈上直接存储基本类型的数据。
基本类型的变量名表示的是数据本身，不是引用。

因此，new关键字的完整含义是，在堆上创建对象。
在 Java中，所有的(普通)对象都储存在堆上，造成以下事实：
1. 在Java中，我们不能跳过引用去直接接触对象
2. 将一个引用赋值给另一个引用，并不能复制对象本身。我们必须寻求其他的机制来复制对象
3. 当没有任何引用指向某个对象时，该对象被清空。它所占据的空间被回收
4. 传递的参数，一个是基本类型的变量，另一个为对象的引用
5. 我们在方法内部使用new创建对象，并将该对象的引用返回。
   如果该返回被一个引用接收，由于对象的引用不为0，对象依然存在，不会被垃圾回收
6. Java中的变量，只能存储：1）（基本类型 即 元数据类型的）值 2）（指对象的）引用

java的引用在行为上更多的相似于c++的指针,可以这么说,java的引用就是披着引用皮的指针：
引用可以为空,赋值null
声明可以不用初始化
声明以后,还可以指向另外的对象

