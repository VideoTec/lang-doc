acquire[英][əˈkwaɪə(r)] [美][əˈkwaɪr]
vt.获得，取得；学到

http://ifeve.com/guava-ratelimiter/

RateLimiter 从概念上来讲，速率限制器会在可配置的速率下分配许可证。
如果必要的话，每个acquire() 会阻塞当前线程直到许可证可用后获取该许可证。
一旦获取到许可证，不需要再释放许可证。

RateLimiter使用的是一种叫令牌桶的流控算法，
RateLimiter会按照一定的频率往桶里扔令牌，
线程拿到令牌才能执行，
比如你希望自己的应用程序QPS不要超过1000，
那么RateLimiter设置1000的速率后，就会每秒往桶里扔1000个令牌

RateLimiter经常用于限制对一些物理资源或者逻辑资源的访问速率。
与Semaphore 相比，
Semaphore 限制了并发访问的数量而不是使用速率。
（注意尽管并发性和速率是紧密相关的，比如参考Little定律）

通过设置许可证的速率来定义RateLimiter。
在默认配置下，许可证会在固定的速率下被分配，速率单位是每秒多少个许可证。
为了确保维护配置的速率，许可会被平稳地分配，许可之间的延迟会做调整。
可能存在配置一个拥有预热期的RateLimiter 的情况，
在这段时间内，每秒分配的许可数会稳定地增长直到达到稳定的速率